<Window x:Class="Note.MainWindowView"
        x:Name="RootWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Note"
        xmlns:converters="clr-namespace:Note.Converters"
        xmlns:view="clr-namespace:Editor.View;assembly=Editor"
        xmlns:vm="clr-namespace:Editor.ViewModel;assembly=Editor"
        mc:Ignorable="d"
        KeyDown="Window_KeyDown"
        TextInput="Window_TextInput"
        WindowStyle="SingleBorderWindow"
        DpiChanged="Window_DpiChanged"
        WindowStartupLocation="CenterScreen"
        Height="450" Width="800">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <converters:ValueEqualsParameterToVisibilityConverter x:Key="ValueEqualsParameterConverter"/>
    </Window.Resources>

    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="{Binding WindowMaximizedBorder}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Background="#191919" Height="Auto">
                <!-- https://engy.us/blog/2020/01/01/implementing-a-custom-window-title-bar-in-wpf/ -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Menu Background="Transparent" Margin="8,0,0,0" VerticalAlignment="Center" KeyboardNavigation.TabNavigation="None" WindowChrome.IsHitTestVisibleInChrome="True" IsTabStop="False">
                    <Menu.Resources>
                        <Style TargetType="MenuItem">
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="File" Foreground="#bbbbbb">
                        <MenuItem Header="Open" Click="MenuItem_Open_Click"/>
                        <MenuItem Header="LSP" Click="MenuItem_Lsp_Click"/>
                    </MenuItem>
                    <MenuItem Header="Edit" Foreground="#bbbbbb">
                        <MenuItem Header=""/>
                    </MenuItem>
                    <MenuItem Header="Settings" Foreground="#bbbbbb">
                        <MenuItem Header="Word Wrap" IsCheckable="true" IsChecked="{Binding WordWrap}"/>
                        <MenuItem Header="Show All Characters" IsCheckable="true" IsChecked="{Binding ShowAllCharacters}"/>
                        <MenuItem Header="Windows Line Breaks" IsCheckable="true" IsChecked="{Binding WindowsLineBreaks}"/>
                    </MenuItem>
                </Menu>
            </Grid>

            <!-- Hack to draw over the default minimize/maximize/exit buttons. Prevent clicking them -->
            <Border Grid.Column="1" Background="Transparent" Width="150" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True"/>

            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="0" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True" VerticalAlignment="Stretch" Background="#191919">
                <StackPanel.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Border.CornerRadius" Value="0"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Width" Value="50"/>
                    </Style>
                </StackPanel.Resources>
                <Button Background="Transparent" Click="MinimizeWindow_Click">
                    <Grid UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                        <Path Data="M 0 5 L 10 5" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#ccc" StrokeThickness="1"/>
                    </Grid>
                </Button>
                <Button Background="Transparent" Click="MaximizeWindow_Click" Visibility="{Binding WindowState, ElementName=RootWindow, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static WindowState.Maximized}}">
                    <Grid UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
                        <Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#ccc" StrokeThickness="1"/>
                    </Grid>
                </Button>
                <Button Background="Transparent" Click="MaximizeWindow_Click" Visibility="{Binding WindowState, ElementName=RootWindow, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static WindowState.Normal}}">
                    <Grid>
                        <Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#ccc" StrokeThickness="2"/>
                    </Grid>
                </Button>
                <Button Background="Transparent" Click="CloseWindow_Click">
                    <Grid>
                        <Path Data="M 0,0 L 8,8 M 8,0 L 0,8" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="#ccc" StrokeThickness="2"/>
                    </Grid>
                </Button>
            </StackPanel>

            <ContentControl Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding TabGroupContainer}"/>
        </Grid>
    </Border>
</Window>
